<launch>
	<arg name="offline"          default="false"/>

	<group ns="porter">

		<include unless="$(arg offline)"
			file="$(find realsense2_camera)/launch/rs_camera.launch">

			<arg name="camera"	value="rs_camera"/>

			<arg name="enable_color"        value="true"/>
			<arg name="enable_fisheye"	value="false"/>
			<arg name="enable_depth"        value="true"/>
			<arg name="enable_gyro"         value="true"/>
			<arg name="enable_accel"        value="true"/>
			<arg name="enable_infra1"       value="false"/>
			<arg name="enable_infra2"       value="false"/>
			

			<arg name="color_width"         default="640"/>
			<arg name="color_height"        default="480"/>
			<arg name="depth_width"         default="640"/>
			<arg name="depth_height"        default="480"/>
			<arg name="infra_width"         default="640"/>
			<arg name="infra_height"        default="480"/>
			<arg name="gyro_fps"            value="200"/>
			<arg name="accel_fps"           value="63"/>
			
			<arg name="filters"	value=""/>
			<arg name="enable_sync"	value="true"/>
			<arg name="align_depth"	value="true"/>
			<arg name="linear_accel_cov"	value="1.0"/>
			<arg name="unite_imu_method"	value="linear_interpolation"/>
		</include>
		
		<!--<node pkg="nodelet" type="nodelet" name="converter_manager" args="manager" output="screen"/>
		<node pkg="nodelet" type="nodelet" name="converter" args="load depth_image_proc/point_cloud_xyz converter_manager">
			<remap from="image_rect" to="/porter/rs_camera/depth/image_rect_raw" />
			<remap from="camera_info" to="/porter/rs_camera/depth/camera_info" />
		</node>-->

		<node pkg="depthimage_to_laserscan" type="depthimage_to_laserscan" name="depthimage_to_laserscan">
			<param name="scan_height" value="100" />
			<param name="scan_time" value="0.033" />
			<param name="range_min" value="0.05" />
			<param name="range_max" value="10.0" />
			<param name="output_frame_id" value="rs_camera_aligned_depth_to_color_frame" />

			<remap from="image" to="/porter/rs_camera/aligned_depth_to_color/image_raw" />
			<remap from="camera_info" to="/porter/rs_camera/color/camera_info" />
		</node>

		<!-- <node  name="xsens_mti_node" pkg="xsens_mti_driver" type="xsens_mti_node" output="screen">
            		<rosparam command="load" file="$(find porter_sensors)/config/Xsens/xsens_mti-g-710.yaml" />
        	</node>


		<node pkg="robot_localization" type="ekf_localization_node" name="ekf_igps" clear_params="true">
			<rosparam command="load" file="$(find porter_2dnav)/config/openvslam/ekf_igps.yaml" />

			<remap from="odometry/filtered" to="igps/filtered"/>
			<remap from="accel/filtered" to=""/>
			
		</node>
		
		<node pkg="robot_localization" type="ekf_localization_node" name="ekf_imu" clear_params="true">
			<rosparam command="load" file="$(find porter_2dnav)/config/openvslam/ekf_imu.yaml" />

			
			<remap from="odometry/filtered" to="imu/filtered"/>
			<remap from="accel/filtered" to=""/>
			
		</node>  -->

		<group ns="openvslam">
			<node pkg="openvslam" type="rgbd" name="openvslam" launch-prefix='' 
				args="-v $(find openvslam)/../../config/orb_vocab.dbow2  -c $(find openvslam)/../../config/rgbd.yaml 
				-p $(find porter_map)/openvslam/garage.msg">
				<remap from="color/image_raw" to="/porter/rs_camera/color/image_raw" />
				<remap from="depth/image_raw" to="/porter/rs_camera/aligned_depth_to_color/image_raw" />
				
			</node>
			
			<node pkg="octomap_server" type="octomap_server_node" name="octomap_map_proj">

				<param name="resolution" value="0.05" />
				
				<param name="frame_id" type="string" value="map" />
				<param name="base_frame_id" value="chasiss" />
				<param name="sensor_model/max_range" value="10.0" />
				<param name="filter_ground" value="true" />
				
				<remap from="cloud_in" to="map_cloud" />

			</node>
			
		</group>

		<node pkg="move_base" type="move_base" name="move_base">
			<!-- <param name="clearing_rotation_allowed" value="false"/> -->
			<rosparam file="$(find porter_2dnav)/config/openvslam/costmap_common_params.yaml" command="load" ns="global_costmap" /> 
			<rosparam file="$(find porter_2dnav)/config/openvslam/costmap_common_params.yaml" command="load" ns="local_costmap" />
			<rosparam file="$(find porter_2dnav)/config/openvslam/local_costmap_params.yaml" command="load" />
			<rosparam file="$(find porter_2dnav)/config/openvslam/global_costmap_params.yaml" command="load" /> 
			<rosparam file="$(find porter_2dnav)/config/openvslam/base_local_planner_params.yaml" command="load" />
			<remap from="cmd_vel" to="/porter/diff_drive_controller/cmd_vel" />
			<remap from="odom" to="/porter/openvslam/rgbd_odom" />
			<remap from="map" to="/porter/openvslam/projected_map"/>
		</node>

	</group>

</launch> 
